
import java.util.*;
import java.io.*;
import java.text.*;

public class SerialiseStock implements Serializable
{

    //CONSTANTS
    public static final int MIN_SIZE = 0;
    public static final int MAX_SIZE = 10000000;

    //CLASSFILEDS
    private StocksClass[] stocks;
    private String cST;
    private double open, close, high, low;
    private int date, volume, numStocks;

    //CONSTRUCTOR
    public SerialiseStock(String file)
    {
        numStocks = 0;
     //   stocks = new StocksClass[MAX_SIZE];
    //    load(file);
    }

    
    //private StocksClass load(String inFilename) throws IllegalArgumentException
    static void load()
    {
        try
        {
            FileInputStream fileInputStream = new FileInputStream("data.bin");
            ObjectInputStream in = new ObjectInputStream(fileInputStream);
            StocksClass[] stocks = (StocksClass[])in.readObject();
            for (int i = 0; i < stocks.length; i++)
            {
                System.out.println(stocks[i] +" \n");
            }
        }
    /*    FileInputStream fileStrm;
        ObjectInputStream objStrm;
        StocksClass inObj = null;
        String inFilename = "data.bin";
        try
        {
            fileStrm = new FileInputStream(inFilename);
            objStrm = new ObjectInputStream(fileStrm);
            inObj = (StocksClass)objStrm.readObject();
            objStrm.close();
        } */
        catch (ClassNotFoundException e)
        {
            System.out.println("Class ShareC;ass not found" + e.getMessage());
        }
        catch (Exception e)
        {
            throw new IllegalArgumentException("Unable to load object from file");
        }  
        //return inObj;
    }

    public static void save(SerialiseStock stocks, String inFilename)
    {
    //    String inFilename ="breadseed";
        FileOutputStream fileStrm;
        ObjectOutputStream objStrm;
        
        try
        {
            fileStrm = new FileOutputStream(inFilename);
            objStrm = new ObjectOutputStream(fileStrm);
            objStrm.writeObject(stocks);

            objStrm.close();
        }
        catch (Exception e)
        {
            throw new IllegalArgumentException("Unable to save object to file");
        }
    }
}
    
